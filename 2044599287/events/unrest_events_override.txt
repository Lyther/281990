namespace = unrest

@unrest_event_cooldown = 360

planet_event = {
	id = unrest.50
	is_triggered_only = yes
	hide_window = yes

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
	}

	trigger = {
		planet_stability < @stabilitylevel2
		num_pops >= 10
		has_orbital_bombardment = no
		exists = owner
		owner = {
			is_zofe_compatible = yes
			NOT = {
				any_situation = {
					is_situation_type = situation_planetary_revolt
				}
			}
		}
		NOR = {
			has_planet_flag = 3_year_owner_change_flag
			has_planet_flag = recent_revolt_attempt
		}
		is_doomsday_planet = no
		exists = controller
		controller = { is_same_value = root.owner }
		OR = {
			owner = { is_gestalt = yes }
			any_owned_species = { species_has_happiness_with_owner = root.owner }
		}
		NOT = {
			owner = {
				has_active_event = { unrest.55 }
			}
		}
		check_variable_arithmetic = { #will the revolt actually tick up?
			which = value:potential_revolt_situation_monthly_progress_estimation
			value > 0
		}
	}

	immediate = {
		set_timed_planet_flag = {
			flag = unrest_timer
			days = 360
		}
		if = { #Getting an impossible to prevent revolt due to culture shock is a bit harsh. (Planet can start with no jobs, for instance)
			limit = { has_culture_shock = yes }
			planet_event = { id = unrest.54 days = 1880 random = 180 } #at least 8 years after owner change (including the 3 years via 3_year_owner_change_flag)
		}
		else = {
			planet_event = { id = unrest.54 days = 300 random = 59 } #definitely within the next year
		}
	}
}

planet_event = {
	id = unrest.54
	is_triggered_only = yes
	hide_window = yes

	pre_triggers = {
		has_owner = yes
		has_ground_combat = no
	}

	trigger = {
		planet_stability < @stabilitylevel2
		num_pops >= 10
		has_orbital_bombardment = no
		exists = owner
		owner = {
			is_zofe_compatible = yes
			NOT = {
				any_situation = {
					is_situation_type = situation_planetary_revolt
				}
			}
		}
		NOR = {
			has_planet_flag = 3_year_owner_change_flag
			has_planet_flag = recent_revolt_attempt
		}
		exists = controller
		controller = { is_same_value = root.owner }
		OR = {
			owner = { is_gestalt = yes }
			any_owned_species = { species_has_happiness_with_owner = root.owner }
		}
		check_variable_arithmetic = { #will the revolt actually tick up?
			which = value:potential_revolt_situation_monthly_progress_estimation
			value > 0
		}
	}

	immediate = {
		if = {
			limit = { #Extra safety because it's possible for two planets to fire this delayed event on the same day and it will check the trigger before either of them can fire (as of March 2022)
				NOT = {
					owner = {
						any_situation = {
							is_situation_type = situation_planetary_revolt
						}
					}
				}
			}
			owner = { #Generally, one would expect the strongest planet to be the center of the revolt
				#Use case here is if you conquer a whole bunch of enemy planets at once.
				ordered_owned_planet = {
					position = 0
					order_by = trigger:num_pops
					limit = {
						has_planet_flag = unrest_timer
						planet_stability < @stabilitylevel2
						has_orbital_bombardment = no
						has_ground_combat = no
						NOR = {
							has_planet_flag = 3_year_owner_change_flag
							has_planet_flag = recent_revolt_attempt
						}
						exists = controller
						controller = { is_same_value = root.owner }
						OR = {
							owner = { is_gestalt = yes }
							any_owned_species = { species_has_happiness_with_owner = root.owner }
						}
						check_variable_arithmetic = { #will the revolt actually tick up?
							which = value:potential_revolt_situation_monthly_progress_estimation
							value > 0
						}
					}
					planet_event = { id = unrest.55 }
				}
			}
		}
	}
}

### Random events

# Unrest: Terror
situation_event = {
	id = unrest.101
	title = unrest.101.name
	desc = unrest.101.desc
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = root.target
	is_triggered_only = yes
	situation = this

	trigger = {
		NOR = {
			has_situation_flag = random_event_happened
			has_situation_flag = slave_revolt
		}
		owner = {
			is_zofe_compatible = yes
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		target = {
			exists = controller
			controller = { is_same_value = root.owner }
			planet_stability < @stabilitylevel2
			NOT = { has_planet_flag = recent_unrest_event }
			has_orbital_bombardment = no
			has_ground_combat = no
		}
	}

	immediate = {
		set_situation_flag = random_event_happened
		target = {
			add_modifier = {
				modifier = minor_terrorist_action
				days = 7200 # 20 years
			}
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
		}
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			target = {
				add_modifier = {
					modifier = minor_terrorist_action
					days = 7200 # 20 years
				}
			}
		}
	}
}

# Unrest: Severe Terror
situation_event = {
	id = unrest.105
	title = unrest.105.name
	desc = unrest.105.desc
	picture = GFX_evt_night_raid
	show_sound = event_air_raid_siren
	location = root.target
	is_triggered_only = yes
	situation = this

	trigger = {
		NOR = {
			has_situation_flag = random_event_happened
			has_situation_flag = slave_revolt
		}
		owner = {
			is_zofe_compatible = yes
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		target = {
			exists = controller
			controller = { is_same_value = root.owner }
			planet_stability < @stabilitylevel2
			NOT = { has_planet_flag = recent_unrest_event }
			has_orbital_bombardment = no
			has_ground_combat = no
		}
	}

	immediate = {
		set_situation_flag = random_event_happened
		target = {
			add_modifier = {
				modifier = major_terrorist_action
				days = 3600 # 10 years
			}
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
		}
	}

	option = {
		name = UNFORTUNATE
		tooltip = {
			target = {
				add_modifier = {
					modifier = major_terrorist_action
					days = 3600 # 10 years
				}
			}
		}
	}
}

# Unrest : Keeping the Peace
situation_event = {
	id = unrest.110
	title = unrest.110.name
	desc = unrest.110.desc
	picture = GFX_evt_announcement
	show_sound = event_announcement
	location = root.target
	is_triggered_only = yes
	situation = this

	trigger = {
		NOR = {
			has_situation_flag = random_event_happened
			has_situation_flag = slave_revolt
		}
		owner = {
			is_zofe_compatible = yes
			NOT = { has_ethic = ethic_gestalt_consciousness }
		}
		target = {
			exists = controller
			controller = { is_same_value = root.owner }
			planet_stability < @stabilitylevel2
			planet_stability >= @stabilitylevel1
			NOT = { has_planet_flag = recent_unrest_event }
			has_orbital_bombardment = no
			has_ground_combat = no
		}
	}

	immediate = {
		set_situation_flag = random_event_happened
		target = {
			add_modifier = {
				modifier = riots_averted
				days = 3600 # 10 years
			}
			set_timed_planet_flag = {
				flag = recent_unrest_event
				days = @unrest_event_cooldown
			}
		}
	}

	option = {
		name = GOOD
		tooltip = {
			target = {
				add_modifier = {
					modifier = riots_averted
					days = 7200 # 20 years
				}
			}
		}
	}
}