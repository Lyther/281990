namespace = origin_test_event

# Test Events

country_event = {
	id = origin_test_event.0
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {

		set_country_flag = acquired_light_matter

		give_technology = { tech = tech_dark_matter_power_core_oe message = no }	

	###############################################
		
		give_technology = { tech = tech_omega_escort message = no } 		
		give_technology = { tech = tech_omega_battlecruiser message = no } 	
		give_technology = { tech = tech_omege_sentinel message = no } 					
		give_technology = { tech = tech_omega_guardian message = no } 		
		give_technology = { tech = tech_omega_titan message = no } 	
		give_technology = { tech = tech_omega_carrier message = no } 			
		give_technology = { tech = tech_omega_colossus message = no } 

	#####################OFFENSE################

		give_technology = { tech = tech_laser_oe message = no }
		give_technology = { tech = tech_disruptor_oe message = no }	
		give_technology = { tech = tech_plasma_oe message = no }
		give_technology = { tech = tech_energy_cannon_oe message = no }		
		give_technology = { tech = tech_energy_torpedo_oe message = no }			
		give_technology = { tech = tech_point_defense_oe message = no }
		give_technology = { tech = tech_energy_lance_oe message = no }		
		give_technology = { tech = tech_arc_emitter_oe message = no }
		give_technology = { tech = tech_titan_emitter_oe message = no }			
		give_technology = { tech = tech_perdition_beam_oe message = no }		
		give_technology = { tech = tech_mass_driver_oe message = no }	
		give_technology = { tech = tech_autocannons_oe message = no }		
		give_technology = { tech = tech_macrocannon_oe message = no }	
		give_technology = { tech = tech_kinetic_artillery_oe message = no }	
		give_technology = { tech = tech_flak_batteries_oe message = no }
		give_technology = { tech = tech_mass_accelerator_oe message = no }	
		give_technology = { tech = tech_titan_accelerator_oe message = no }
		give_technology = { tech = tech_missile_oe message = no }			
		give_technology = { tech = tech_torpedo_oe message = no }		
		give_technology = { tech = tech_barrage_missile_oe message = no }	
		give_technology = { tech = tech_xl_missile_oe message = no }
		give_technology = { tech = tech_missile_nuke_oe message = no }			
		give_technology = { tech = tech_strike_craft_bomber_oe message = no }		
		give_technology = { tech = tech_strike_craft_fighter_oe message = no }	
		give_technology = { tech = tech_strike_craft_gunship_oe message = no }	
		give_technology = { tech = tech_armor_oe message = no }	
		give_technology = { tech = tech_dark_matter_deflector_oe message = no }
		give_technology = { tech = tech_thrusters_oe message = no }
		give_technology = { tech = tech_sensor_oe message = no }	
		give_technology = { tech = tech_computer_lightmatter message = no } 		
		give_technology = { tech = tech_enigmatic_drive_oe message = no }
		#give_technology = { tech = tech_darkmatter_reactor_booster_oe message = no }			
		give_technology = { tech = tech_darkmatter_afterburners_oe message = no }	
		give_technology = { tech = tech_darkmatter_hyper_jump_drive_oe message = no }		
		give_technology = { tech = tech_darkmatter_reactive_drone_oe message = no }
		give_technology = { tech = tech_darkmatter_aura_energy_drainer_oe message = no }	
		give_technology = { tech = tech_darkmatter_shield_supercharger_oe message = no }
		give_technology = { tech = tech_darkmatter_armor_supercharger_oe message = no }	
		#give_technology = { tech = tech_darkmatter_star_charter_oe message = no }
		give_technology = { tech = tech_inspire_aura_oe message = no }			
		give_technology = { tech = tech_energy_core_oe message = no } 	
		give_technology = { tech = tech_analyzer_oe message = no } 
		give_technology = { tech = tech_omega_warmech message = no } 	
	}
}


country_event = {
	id = origin_test_event.1
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {

		set_country_flag = acquired_light_matter

		give_technology = { tech = tech_celestial_guardian message = no } 
		give_technology = { tech = tech_precursor_assault_carrier message = no } 	
		give_technology = { tech = tech_progenitor_escort message = no } 	
		give_technology = { tech = tech_progenitor_battlecruiser message = no } 		
		give_technology = { tech = tech_progenitor_titan message = no } 		
		give_technology = { tech = tech_progenitor_avatar message = no } 		
		
		
	}
}

country_event = {
	id = origin_test_event.2
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {	
			create_origin_scout_fleet = yes
			set_owner = ROOT
		}
	}
}

country_event = {
	id = origin_test_event.3
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {	
	
			create_origin_small_fleet = yes
			set_owner = ROOT
		}
	}
}

country_event = {
	id = origin_test_event.4
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {	
			create_scrub_fleet = yes
			set_owner = ROOT
		}
	}
}

country_event = {
	id = origin_test_event.5
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {	
			create_scrub_fleet_large = yes
			set_owner = ROOT
		}
	}
}

country_event = {
	id = origin_test_event.6
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {	
			create_flagship = yes
			set_owner = ROOT
		}
	}
}


country_event = {
	id = origin_test_event.9
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		create_leader = {
			class = general
			species = root.species
			name = random
			traits = {
				trait = leader_trait_general_ancient_knowledge
				trait = leader_trait_general_bionic_implant
				trait = leader_trait_general_master_mind
			}
			set_age = 20
			skill = 10
		}
		capital_scope = {	
			create_fleet = {
				name = random
				effect = {
					set_owner = root
					while = {
						count = 1
						create_army_transport = {
							ship_name = random
							graphical_culture = "original_empire"
							army_name = random
							army_type = "origin_autarch_guardian"
							species = root.species
						}
					}
					last_created_army = { assign_leader = last_created_leader }
					while = {
						count = 5
						create_army_transport = {
							ship_name = random
							graphical_culture = "original_empire"
							army_name = random
							army_type = "origin_assault_guardian"
							species = root.species
						}
					}
					while = {
						count = 10
						create_army_transport = {
							ship_name = random
							graphical_culture = "original_empire"
							army_name = random
							army_type = "sofe_omega_mech"
							species = root.species
						}
					}
					set_location = {
						target = prev
						distance = 20
						angle = random 
					}
				}
			}
		}
	}
}

country_event = {
	id = origin_test_event.11
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		set_country_type = sbtg_stellarborne_empire_active
		change_government = {
			civics = {
				civic = civic_know_everything_ascended
				civic = civic_solar_empire_ascended
				civic = civic_eternal_fleet_ascended
			}
		}
		country_event = { id = origin_test_event.1 }
		country_event = { id = origin_test_event.2 }
		clear_ethos = yes
		add_resource = {
			minerals = 1000000
			energy = 1000000
			alloys = 1000000
			food = 1000000
			consumer_goods = 1000000
			sr_dark_matter = 1000000
			sr_zro = 100000
			sr_living_metal = 100000
			volatile_motes = 100000
			rare_crystals = 100000
			exotic_gases = 100000
			nanites = 100000
			acot_sr_dark_energy = 1000000
			acot_sr_stellarite = 1000000
			acot_sr_light_matter = 1000000				
			influence = 1000
			unity = 100000
		}
		create_ship_design = { design = "NAME_PROGENITOR_ESCORT" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_PROGENITOR_BATTLECRUISER" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_PROGENITOR_TITAN" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_PROGENITOR_AVATAR" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_ORIGIN_TOWER" }
		add_ship_design = last_created_design
		create_ship_design = { design = "NAME_OE_Super_Starbase_Playable" }
		add_ship_design = last_created_design
		establish_communications_no_message = event_target:sofe_light_country
		every_owned_pop = {
			if = {
				limit = { has_trait = trait_pc_desert_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_desert_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_arid_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_arid_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_savannah_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_savannah_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_tropical_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_tropical_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_continental_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_continental_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_arctic_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_arctic_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_tundra_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_tundra_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_alpine_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_alpine_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_nuked_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_nuked_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_gaia_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_gaia_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_ringworld_habitable_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_ringworld_habitable_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_habitat_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_habitat_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_machine_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_machine_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_hive_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_hive_preference
				}			
			}
			if = {
				limit = { has_trait = trait_pc_relic_preference }
				modify_species = {
					species = this
					remove_trait = trait_pc_relic_preference
				}			
			}
		}	
		every_owned_pop = {
			modify_species = {
				species = this
					add_trait = trait_master_mind
			}
			modify_species = {
				species = this
					add_trait = trait_ancient_knowledge
			}
			modify_species = {
				species = this
					add_trait = trait_bionic_implants
			}
			modify_species = {
				species = this
					add_trait = trait_ancient_race
			}
			modify_species = {
				species = this
					add_trait = trait_pc_all_preference
			}
		}
		change_dominant_species = { species = last_created_species change_all = yes }
		
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire			
				}
			}
			establish_communications_no_message = root
		}

		### Ancient Knowledge
	
		every_owned_leader = {
					limit = {
						is_same_species = root
						NOR = {
							has_trait =	leader_trait_admiral_ancient_knowledge
							has_trait =	leader_trait_general_ancient_knowledge
							has_trait =	leader_trait_governor_ancient_knowledge
							has_trait =	leader_trait_scientist_ancient_knowledge
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_ancient_knowledge
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_ancient_knowledge
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_ancient_knowledge
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_ancient_knowledge
					}
				}		
		
				every_pool_leader = {
					limit = {
						is_same_species = root
						#species = { 
						#	has_trait = trait_psionic
						#	is_same_value = event_target:psionic_species
						#}
						NOR = {
							has_trait = leader_trait_admiral_ancient_knowledge
							has_trait = leader_trait_general_ancient_knowledge
							has_trait = leader_trait_governor_ancient_knowledge
							has_trait = leader_trait_scientist_ancient_knowledge

						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_ancient_knowledge
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_ancient_knowledge
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_ancient_knowledge
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_ancient_knowledge
					}
				}

		#### Bio Implants

				every_owned_leader = {
					limit = {
						is_same_species = root.owner
						NOR = {
							has_trait =    leader_trait_admiral_bionic_implant
							has_trait =    leader_trait_general_bionic_implant
							has_trait =    leader_trait_governor_bionic_implant
							has_trait =    leader_trait_scientist_bionic_implant
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_bionic_implant
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_bionic_implant
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_bionic_implant
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_bionic_implant
					}
				}
				every_owned_leader = {
					limit = {
						is_same_species = root.owner
						NOR = {
							has_trait =    leader_trait_admiral_bionic_implant
							has_trait =    leader_trait_general_bionic_implant
							has_trait =    leader_trait_governor_bionic_implant
							has_trait =    leader_trait_scientist_bionic_implant
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_bionic_implant
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_bionic_implant
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_bionic_implant
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_bionic_implant
					}
				}
			
		
		#### Dracakis

				every_owned_leader = {
					limit = {
						is_same_species = root.owner
						NOR = {
							has_trait =    leader_trait_admiral_master_mind
							has_trait =    leader_trait_general_master_mind
							has_trait =    leader_trait_governor_master_mind
							has_trait =    leader_trait_scientist_master_mind
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_master_mind
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_master_mind
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_master_mind
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_master_mind
					}
				}
				every_owned_leader = {
					limit = {
						is_same_species = root.owner
						NOR = {
							has_trait =    leader_trait_admiral_bionic_implant
							has_trait =    leader_trait_general_bionic_implant
							has_trait =    leader_trait_governor_bionic_implant
							has_trait =    leader_trait_scientist_bionic_implant
						}
					}
					if = {
						limit = { leader_class = admiral }
						add_trait = leader_trait_admiral_master_mind
					}
					if = {
						limit = { leader_class = general }
						add_trait = leader_trait_general_master_mind
					}
					if = {
						limit = { leader_class = governor }
						add_trait = leader_trait_governor_master_mind
					}
					if = {
						limit = { leader_class = scientist }
						add_trait = leader_trait_scientist_master_mind
					}
		}
	}
}

# Original Emprie Helana
planet_event = {
	id = origin_test_event.12
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {	
		reset_planet = yes
		remove_all_buildings = yes
		prevent_anomaly = yes
		change_pc = pc_goodman_gaia_world
		set_owner = root.owner
		set_controller = root.owner
		while = {
			count = 75
			create_pop = {
				species = owner_main_species
			}
		}
		change_planet_size = 60
		remove_all_districts = yes
		while = {
			count = 50
			add_district = district_sofe_omega_city
		}
		while = {
			count = 25
			add_district = district_sofe_omega_logistics
		}
		while = {
			count = 25
			add_district = district_sofe_omega_progression
		}
	
		add_building = building_heaven_sanctuary
		add_building = building_grand_fortress
		add_building = building_grand_fortress
		add_building = building_crystal_arch
		add_building = building_crystal_arch
		add_building = building_crystal_arch
		add_building = building_crystal_arch
		add_building = building_chamber_of_hope
		add_building = building_chamber_of_hope
		add_building = building_library_of_fate
		add_building = building_library_of_fate
		add_building = building_power_pyramid
		add_building = building_power_pyramid
		add_building = building_super_shelter
		add_building = building_super_shelter
		add_building = building_light_foundry

		root.owner = {
			create_leader = {
				class = general
				species = event_target:origin_species
				name = random
				traits = {
					trait = leader_trait_general_ancient_knowledge
					trait = leader_trait_general_bionic_implant
					trait = leader_trait_general_master_mind
				}
				leader_age_min = 101010
				leader_age_max = 614104
				skill = 10
			}
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		create_army = {
			owner = root.owner
			species = owner_main_species
			type = "origin_guardian"
		}
		last_created_army = { assign_leader = last_created_leader }
	}
}


country_event = {
	id = origin_test_event.13
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = sbtg_stellarborne_empire
			}
		remove_modifier = sofe_ca_damagenerf_heavy
		remove_modifier = sofe_ca_damagenerf_lite
		}
	}
}

country_event = {
	id = origin_test_event.14
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = sbtg_stellarborne_empire
			}
			remove_modifier = sofe_ca_damagenerf_heavy
			remove_modifier = sofe_ca_damagenerf_lite
		add_modifier = { modifier = sofe_ca_damagenerf_lite }
		}
	}
}

country_event = {
	id = origin_test_event.15
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = sbtg_stellarborne_empire
			}
			remove_modifier = sofe_ca_damagenerf_heavy
			remove_modifier = sofe_ca_damagenerf_lite
		add_modifier = { modifier = sofe_ca_damagenerf_heavy }
		}
	}
}

country_event = {
	id = origin_test_event.16
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {
			while = {
				count = 40
				create_army = {
					owner = THIS
					type = sofe_omega_mech
				}
			}
		}
	}
}

#### 
country_event = {
	id = origin_test_event.60
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		set_global_flag = sbtg_blokkat_light_block
	}
}

country_event = {
	id = origin_test_event.61
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		every_country = {
			limit = {
				is_country_type = sbtg_sentinel_dormant
			}
			set_country_type = sbtg_sentinel_active
		}
	}
}

country_event = {
	id = origin_test_event.100
	hide_window = yes
	is_triggered_only = yes	
	
	immediate = {
		capital_scope = {	
			star = {
				create_ambient_object = {
					type = sbtg_arkship_background
					location = this
					entity_offset_height = -750
				}
			}
		}
	}
}