sun_praiser = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_great_pyramid
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job
	possible = {
	}

	resources = {
		category = planet_priests
		produces = {
			unity = 6
		}
		upkeep = {
			consumer_goods = 2
		}
	}
	
	country_modifier = {
		planet_jobs_energy_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|sun_praiser|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 5
			has_job = sun_praiser
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

hive_sun_praiser = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_great_pyramid
	icon = sun_praiser

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 2
			energy = 2
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 2
			energy = 2
		}
	}
	
	country_modifier = {
		planet_jobs_energy_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_hivemind }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_synchronicity_instinctive_synchronization }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = planet.orbital_defence
			planet.orbital_defence = {
				exists = starbase
				starbase = {
					has_starbase_building = ring_synapse_hub
				}
			}
		}
		planet_amenities_no_happiness_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|hive_sun_praiser|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

machine_sun_praiser = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_great_pyramid
	icon = sun_praiser

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 4
		}
	}
	
	country_modifier = {
		planet_jobs_energy_produces_mult = 0.05
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = planet_artifact_relays_machine }
		}
		modifier = {
			planet_stability_add = 2
			planet_jobs_simple_drone_produces_mult = 0.01
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_active_tradition = tr_synchronicity_integrated_preservation
			}
		}
		modifier = {
			planet_crime_no_happiness_add = -2
		}
	}

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|machine_sun_praiser|RESOURCE|unity|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}
}