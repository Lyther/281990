namespace = origin_corrupt_brain

country_event = {
	id = origin_corrupt_brain.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_origin = origin_corrupt_brain
	}
	
	immediate = {
		ruler = {
			add_trait_no_notify = leader_trait_corrupt_brain
		}
		every_owned_leader = {
			limit = {
				is_gestalt_node = yes
			}
			add_trait_no_notify = leader_trait_corrupt_node
		}
		refresh_corrupt_brain_value = yes
		start_situation = {
			type = situation_origin_corrupt_brain
			target = root
			effect = {
				set_situation_approach = approach_origin_corrupt_brain_default
			}
		}
		country_event = { id = origin_corrupt_brain.5 days = 29 }
	}
}

country_event = {
	id = origin_corrupt_brain.2
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_origin = origin_corrupt_brain
			has_origin = origin_corrupt_brain_end
			has_origin = origin_pure_brain
		}
	}
	
	immediate = {
		from = {
			leader_event = { id = origin_corrupt_brain.3 days = 1 } #格式塔节点领袖在被创建时还不位于节点位置，等一天再执行效果
		}
	}
}

leader_event = {
	id = origin_corrupt_brain.3
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		OR = {
			is_ruler = yes
			is_gestalt_node = yes
		}
	}
	
	immediate = {
		if = {
			limit = {
				owner = { has_origin = origin_pure_brain }
			}
			if = {
				limit = {
					is_ruler = yes
				}
				add_trait_no_notify = leader_trait_pure_brain
			}
			else = {
				add_trait_no_notify = leader_trait_pure_node
			}
		}
		else = {
			if = {
				limit = {
					is_ruler = yes
				}
				add_trait_no_notify = leader_trait_corrupt_brain
			}
			else = {
				add_trait_no_notify = leader_trait_corrupt_node
			}
		}
		owner = {
			refresh_corrupt_brain_value = yes
		}
	}
}

country_event = {
	id = origin_corrupt_brain.5
	is_triggered_only = yes
	hide_window = yes

	trigger = {
	}
	
	immediate = {
		refresh_corrupt_brain_value = yes
		country_event = { id = origin_corrupt_brain.5 days = 30 }
	}
}

country_event = {
	id = origin_corrupt_brain.6
	title = origin_corrupt_brain.6.name
	desc = origin_corrupt_brain.6.desc
	picture = GFX_evt_spymaster
	
	is_triggered_only = yes

	trigger = {
		has_origin = origin_corrupt_brain
		OR = {
			last_increased_tech = tech_corrupt_brain_hive_1
			last_increased_tech = tech_corrupt_brain_hive_2
			last_increased_tech = tech_corrupt_brain_machine_1
			last_increased_tech = tech_corrupt_brain_machine_2
		}
	}
	
	immediate = {
		ruler = {
			remove_all_negative_traits = yes
		}
		every_owned_leader = {
			limit = {
				is_gestalt_node = yes
			}
			remove_all_negative_traits = yes
		}
		refresh_corrupt_brain_value = yes
	}
	
	option = {
		name = origin_corrupt_brain.6.a
	}
}

situation_event = {
	id = origin_corrupt_brain.11
	title = origin_corrupt_brain.11.name
	desc = origin_corrupt_brain.11.desc
	picture = GFX_evt_spymaster
	show_sound = event_yellow_alert
	situation = this
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		owner = {
			ruler = {
				add_trait = random_negative
			}
			every_owned_leader = {
				limit = {
					is_gestalt_node = yes
				}
				add_trait = random_negative
			}
			refresh_corrupt_brain_value = yes
		}
	}
	
	after = {
	}
	
	option = {
		name = origin_corrupt_brain.11.a
	}
}

situation_event = {
	id = origin_corrupt_brain.12
	title = origin_corrupt_brain.12.name
	desc = origin_corrupt_brain.12.desc
	picture = GFX_evt_spymaster
	show_sound = event_yellow_alert
	situation = this
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		owner = {
			ruler = {
				add_trait = random_negative
			}
			every_owned_leader = {
				limit = {
					is_gestalt_node = yes
				}
				add_trait = random_negative
			}
			refresh_corrupt_brain_value = yes
		}
	}
	
	after = {
	}
	
	option = {
		name = origin_corrupt_brain.12.a
	}
}

situation_event = {
	id = origin_corrupt_brain.13
	title = origin_corrupt_brain.13.name
	desc = origin_corrupt_brain.13.desc
	picture = GFX_evt_spymaster
	show_sound = event_yellow_alert
	situation = this
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		owner = {
			ruler = {
				add_trait = random_negative
			}
			every_owned_leader = {
				limit = {
					is_gestalt_node = yes
				}
				add_trait = random_negative
			}
			refresh_corrupt_brain_value = yes
		}
	}
	
	after = {
	}
	
	option = {
		name = origin_corrupt_brain.13.a
	}
}

situation_event = {
	id = origin_corrupt_brain.14
	title = origin_corrupt_brain.14.name
	desc = origin_corrupt_brain.14.desc
	picture = GFX_evt_spymaster
	show_sound = event_yellow_alert
	situation = this
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		owner = {
			ruler = {
				add_trait = random_negative
			}
			every_owned_leader = {
				limit = {
					is_gestalt_node = yes
				}
				add_trait = random_negative
			}
			refresh_corrupt_brain_value = yes
		}
	}
	
	after = {
	}
	
	option = {
		name = origin_corrupt_brain.14.a
	}
}

situation_event = {
	id = origin_corrupt_brain.15
	title = origin_corrupt_brain.15.name
	desc = {
		text = origin_corrupt_brain.15.desc_1
		trigger = {
			owner = {
				OR = {
					has_technology = tech_corrupt_brain_hive_1
					has_technology = tech_corrupt_brain_hive_2
					has_technology = tech_corrupt_brain_machine_1
					has_technology = tech_corrupt_brain_machine_2
				}
			}
		}
	}
	desc = {
		text = origin_corrupt_brain.15.desc_2
		trigger = {
			owner = {
				NOR = {
					has_technology = tech_corrupt_brain_hive_1
					has_technology = tech_corrupt_brain_hive_2
					has_technology = tech_corrupt_brain_machine_1
					has_technology = tech_corrupt_brain_machine_2
				}
			}
		}
	}
	picture = GFX_evt_spymaster
	show_sound = event_red_alert
	situation = this
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
		owner = {
			if = {
				limit = {
					OR = {
						has_technology = tech_corrupt_brain_hive_1
						has_technology = tech_corrupt_brain_hive_2
						has_technology = tech_corrupt_brain_machine_1
						has_technology = tech_corrupt_brain_machine_2
					}
				}
				set_origin = origin_pure_brain
				ruler = {
					remove_all_negative_traits = yes
					remove_trait = leader_trait_corrupt_brain
					add_trait_no_notify = leader_trait_pure_brain
				}
				every_owned_leader = {
					limit = {
						is_gestalt_node = yes
					}
					remove_all_negative_traits = yes
					remove_trait = leader_trait_corrupt_node
					add_trait_no_notify = leader_trait_pure_node
				}
			}
			else = {
				set_origin = origin_corrupt_brain_end
			}
		}
	}
	
	after = {
		hidden_effect = {
			destroy_situation = this
		}
	}
	
	option = {
		name = origin_corrupt_brain.15.a
		trigger = {
			owner = {
				OR = {
					has_technology = tech_corrupt_brain_hive_1
					has_technology = tech_corrupt_brain_hive_2
					has_technology = tech_corrupt_brain_machine_1
					has_technology = tech_corrupt_brain_machine_2
				}
			}
		}
		tooltip = {
			owner = {
				set_origin = origin_pure_brain
			}
		}
	}
	
	option = {
		name = origin_corrupt_brain.15.b
		trigger = {
			owner = {
				NOR = {
					has_technology = tech_corrupt_brain_hive_1
					has_technology = tech_corrupt_brain_hive_2
					has_technology = tech_corrupt_brain_machine_1
					has_technology = tech_corrupt_brain_machine_2
				}
			}
		}
		tooltip = {
			owner = {
				set_origin = origin_corrupt_brain_end
			}
		}
	}
}