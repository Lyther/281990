namespace = time_test

country_event = {
	id = time_test.1
	title = time_test.1.name
	desc = time_test.1.desc
	picture = GFX_evt_wormhole
	
	is_triggered_only = yes

	trigger = {
	}

	immediate = {
	}
	
	option = {
		name = time_test.1.a
		hidden_effect = {
			capital_scope = {
				save_global_event_target_as = dimension_traveler_planet
			}
			create_species = {
				name = "NAME_Dimension_Traveler"
				class = HUM
				namelist = TIME0
				portrait = dimension_traveler_portrait
				homeworld = event_target:dimension_traveler_planet
				traits = {
					trait = "trait_dimension_traveler"
				}
				gender = female
				immortal = yes
				
				effect = { save_global_event_target_as = dimension_traveler_species }
			}
			create_country = {
				name = "NAME_Dimension_Traveler"
				type = dimension_traveler
				species = last_created_species
				flag = {
					icon={
						category="domination"
						file="domination_13.dds"
					}
					background={
						category="backgrounds"
						file="triangle_split.dds"
					}
					colors={
						"white"
						"black"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				save_global_event_target_as = dimension_traveler_country
			}
			event_target:dimension_traveler_country = {
				establish_communications_no_message = root
			}
			save_global_event_target_as = dimension_traveler_owner
			add_opinion_modifier = {
				modifier = opinion_dimension_traveler
				who = event_target:dimension_traveler_country
			}
			add_opinion_modifier = {
				modifier = opinion_dimension_traveler
				who = event_target:dimension_traveler_country
			}
			set_variable = {
				which = dimension_traveler_level
				value = 1
			}
			set_variable = {
				which = dimension_traveler_experience
				value = 0
			}
			if = {
				limit = {
					is_gestalt = no
				}
				force_add_civic = civic_origin_white_hole
			}
			else = {
				force_add_civic = civic_origin_white_hole_gestalt
			}
			set_country_flag = dimension_traveler_trait_time_secret
			set_country_flag = dimension_traveler_trait_circle_secret
			set_country_flag = dimension_traveler_trait_dimension_secret
			set_country_flag = dimension_traveler_trait_chosen
			set_country_flag = dimension_traveler_trait_instrument_chosen
			set_country_flag = dimension_traveler_trait_composer_chosen
			set_country_flag = dimension_traveler_trait_eater_chosen
			set_country_flag = dimension_traveler_trait_whisperers_chosen
			set_country_flag = dimension_traveler_trait_mind_wipe_02
			set_country_flag = dimension_traveler_trait_brief
			set_country_flag = dimension_traveler_trait_foredoomed_to_a_rendezvous
			set_country_flag = dimension_traveler_trait_dragonslayer
			set_country_flag = dimension_traveler_trait_dragonbane
			set_country_flag = dimension_traveler_trait_caravan_counter
			set_country_flag = dimension_traveler_trait_time_hotel
			set_country_flag = dimension_traveler_trait_towel
			set_country_flag = dimension_traveler_trait_percussive_maintainer
		}
	}
	
	option = {
		name = time_test.1.b
		hidden_effect = {
			capital_scope = {
				save_global_event_target_as = dimension_traveler_planet
			}
			create_species = {
				name = "NAME_Dimension_Traveler"
				class = MAM
				namelist = TIME0
				portrait = mam3
				homeworld = event_target:dimension_traveler_planet
				traits = {
					trait = "trait_dimension_traveler"
				}
				gender = female
				immortal = yes
				
				effect = { save_global_event_target_as = dimension_traveler_species }
			}
			create_country = {
				name = "NAME_Dimension_Traveler"
				type = dimension_traveler
				species = last_created_species
				flag = {
					icon={
						category="blocky"
						file="flag_blocky_5.dds"
					}
					background={
						category="backgrounds"
						file="horizontal.dds"
					}
					colors={
						"white"
						"black"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				save_global_event_target_as = dimension_traveler_country
			}
			event_target:dimension_traveler_country = {
				establish_communications_no_message = root
			}
			save_global_event_target_as = dimension_traveler_owner
			add_opinion_modifier = {
				modifier = opinion_dimension_traveler
				who = event_target:dimension_traveler_country
			}
			add_opinion_modifier = {
				modifier = opinion_dimension_traveler
				who = event_target:dimension_traveler_country
			}
			set_variable = {
				which = dimension_traveler_level
				value = 1
			}
			set_variable = {
				which = dimension_traveler_experience
				value = 0
			}
		}
	}
	
	option = {
		name = time_test.1.c
	}
}

country_event = {
	id = time_test.2
	title = time_test.2.name
	desc = time_test.2.desc
	picture = GFX_evt_planet_beam

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
		event_target:origin_colossus_country = {
			set_faction_hostility = {
				target = root
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
	}
	
	option = {
		name = time_test.2.a
		country_event = { id = origin_colossus.44 }
	}
	
	option = {
		name = time_test.2.b
		country_event = { id = origin_colossus.44 days = 1 }
	}
	
	option = {
		name = time_test.2.c
		country_event = { id = origin_colossus.44 days = 10 }
	}
	
	option = {
		name = time_test.2.d
		country_event = { id = origin_colossus.44 days = 30 }
	}
	
	option = {
		name = time_test.2.e
		country_event = { id = origin_colossus.44 days = 90 }
	}
	
	option = {
		name = time_test.2.f
	}
}

country_event = {
	id = time_test.3
	title = time_test.3.name
	desc = time_test.3.desc
	picture = GFX_evt_small_space_battle

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = time_test.3.a
		hidden_effect = {
			set_origin = origin_pirate_king_end
			set_country_flag = worm_tomb_ending
			random_situation = {
				limit = {
					is_situation_type = situation_origin_pirate_king
				}
				destroy_situation = this
			}
			capital_scope.solar_system = {
				closest_system = {
					limit = {
						NOR = {
							has_star_flag = horizonsignal_system
							has_star_flag = time_black_hole_system
						}
					}
					set_star_class = sc_black_hole
					set_star_flag = horizonsignal_spawn
				}
			}
		}
	}
	
	option = {
		name = time_test.3.b
	}
}

country_event = {
	id = time_test.4
	title = time_test.4.name
	desc = time_test.4.desc
	picture = GFX_evt_wormhole

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = time_test.4.a
		hidden_effect = {
			capital_scope = {
				every_owned_pop = {
					make_akx_messenger = yes
				}
			}
		}
	}
	
	option = {
		name = time_test.4.b
	}
}

country_event = {
	id = time_test.5
	title = time_test.5.name
	desc = time_test.5.desc
	picture = GFX_evt_wormhole

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = time_test.5.a
		hidden_effect = {
			create_fleet = {
				name = "NAME_Horror_Titan"
				settings = {
					can_upgrade = no
					can_change_composition = no
					uses_naval_capacity = no
					spawn_debris = no
				}
				effect = {
					set_owner = root
					create_ship = {
						name = {
							key = "NAME_Horror_Titan"
						}
						design = "NAME_Horror_Titan"
						prefix = no
						upgradable = no
					}
					create_ship = {
						name = {
							key = "NAME_Time_Titan"
						}
						design = "NAME_Time_Titan"
						prefix = no
						upgradable = no
					}
					create_ship = {
						name = {
							key = "NAME_End_Titan"
						}
						design = "NAME_End_Titan"
						prefix = no
						upgradable = no
					}
					set_location = root.capital_scope
					save_global_event_target_as = time_titan_fleet
					add_modifier = { modifier = time_titan_modifier }
				}
			}
			set_country_flag = gain_time_titan
		}
	}
	
	option = {
		name = time_test.5.b
	}
}

planet_event = {
	id = time_test.6
	title = time_test.6.name
	desc = time_test.6.desc
	picture = GFX_evt_supernova

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = time_test.6.a
		hidden_effect = {
			set_planet_flag = black_hole_horror
			planet_event = { id = situation.1095 }
		}
	}
	
	option = {
		name = time_test.6.b
	}
}

situation_event = {
	id = time_test.7
	title = time_test.7.name
	desc = time_test.7.desc
	picture = GFX_evt_clocks
	situation = this

	is_triggered_only = yes
	
	trigger = {
	}
	
	immediate = {
	}
	
	option = {
		name = time_test.7.a
		add_situation_progress = -5
	}
	
	option = {
		name = time_test.7.a
		add_situation_progress = -10
	}
	
	option = {
		name = time_test.7.a
		add_situation_progress = -20
	}
	
	option = {
		name = time_test.7.a
		add_situation_progress = -50
	}
	
	option = {
		name = time_test.7.a
		add_situation_progress = -100
	}
	
	option = {
		name = time_test.7.b
		add_situation_progress = 5
	}
	
	option = {
		name = time_test.7.b
		add_situation_progress = 10
	}
	
	option = {
		name = time_test.7.b
		add_situation_progress = 20
	}
	
	option = {
		name = time_test.7.b
		add_situation_progress = 50
	}
	
	option = {
		name = time_test.7.b
		add_situation_progress = 100
	}
	
	option = {
		name = time_test.7.c
	}
}