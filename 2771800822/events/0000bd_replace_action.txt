###replace	替换原版事件
namespace = action
# Assimilate Pops
planet_event = {
	id = action.65
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_owned_species = {
			has_citizenship_type = {
				type = citizenship_assimilation
				country = root.owner
			}
		}
	}
	immediate = {
		random_list = {
			1 = {
				# 12 pops
				set_variable = {
					which = assimilation_counter
					value = 12
				}
				while = {
					count = 12
					limit = {
						any_owned_pop = {
							has_citizenship_type = {
								type = citizenship_assimilation
								country = root.owner
							}
						}
						check_variable = {
							which = assimilation_counter
							value > 0
						}
					}
					#assimilation_effect = yes
					# root/this = planet
					random_owned_pop = {
						limit = {
							has_citizenship_type = {
								type = citizenship_assimilation
								country = root.owner
							}
						}
						# ascended synths
						if = {
							limit = {
								root.owner = {
									OR = {
										has_country_flag = synthetic_empire
										has_ascension_perk = ap_bd_great_harmony
									}
								}
							}
							kill_pop = yes
							root = {
								create_pop = {
									species = root.owner
									ethos = root.owner
								}
								owner = {
									if = {
										limit = {
											has_ascension_perk = ap_become_the_crisis
										}
										complete_crisis_objective = crisobj_purge_pops
									}
								}
							}
						}
						else = {
							random_galaxy_species = {
								limit = {
									has_species_flag = assimilation_species_of_species@prev.species
									has_species_flag = assimilation_species_of_empire@root.owner
								}
								save_event_target_as = convert_to_species
							}
							species = {
								save_event_target_as = old_species
							}
							if = {
								limit = {
									exists = event_target:convert_to_species									#should always exist
								}
								change_species = event_target:convert_to_species
								owner = {
									if = {
										limit = {
											has_ascension_perk = ap_become_the_crisis
										}
										complete_crisis_objective = crisobj_purge_pops
									}
								}
								root = {
									change_variable = {
										which = assimilation_counter
										value = -1
									}
									while = {
										#to avoid doing the random_galaxy_species thing too many times
										limit = {
											exists = event_target:old_species
											check_variable = {
												which = assimilation_counter
												value > 0
											}
											any_owned_pop = {
												is_same_value = event_target:old_species
											}
										}
										random_owned_pop = {
											limit = {
												is_exact_same_species = event_target:old_species
											}
											change_species = event_target:convert_to_species
											apply_post_assimilation_effects = yes
										}
										change_variable = {
											which = assimilation_counter
											value = -1
										}
										owner = {
											if = {
												limit = {
													has_ascension_perk = ap_become_the_crisis
												}
												complete_crisis_objective = crisobj_purge_pops
											}
										}
									}
								}
								apply_post_assimilation_effects = yes
							}
							else = {
								log_error = "No species found for \\[This.Species.GetName] pop owned by \\[This.Owner.GetName] on \\[This.Planet.GetName] to assimilate to"
							}
						}
					}
				}
			}
			1 = {
				# 20 pops
				set_variable = {
					which = assimilation_counter
					value = 20
				}
				while = {
					count = 20
					limit = {
						any_owned_pop = {
							has_citizenship_type = {
								type = citizenship_assimilation
								country = root.owner
							}
						}
						check_variable = {
							which = assimilation_counter
							value > 0
						}
					}
					#assimilation_effect = yes
					# root/this = planet
					random_owned_pop = {
						limit = {
							has_citizenship_type = {
								type = citizenship_assimilation
								country = root.owner
							}
						}
						# ascended synths
						if = {
							limit = {
								root.owner = {
									OR = {
										has_country_flag = synthetic_empire
										has_ascension_perk = ap_bd_great_harmony
									}
								}
							}
							kill_pop = yes
							root = {
								create_pop = {
									species = root.owner
									ethos = root.owner
								}
								owner = {
									if = {
										limit = {
											has_ascension_perk = ap_become_the_crisis
										}
										complete_crisis_objective = crisobj_purge_pops
									}
								}
							}
						}
						else = {
							random_galaxy_species = {
								limit = {
									has_species_flag = assimilation_species_of_species@prev.species
									has_species_flag = assimilation_species_of_empire@root.owner
								}
								save_event_target_as = convert_to_species
							}
							species = {
								save_event_target_as = old_species
							}
							if = {
								limit = {
									exists = event_target:convert_to_species									#should always exist
								}
								change_species = event_target:convert_to_species
								owner = {
									if = {
										limit = {
											has_ascension_perk = ap_become_the_crisis
										}
										complete_crisis_objective = crisobj_purge_pops
									}
								}
								root = {
									change_variable = {
										which = assimilation_counter
										value = -1
									}
									while = {
										#to avoid doing the random_galaxy_species thing too many times
										limit = {
											exists = event_target:old_species
											check_variable = {
												which = assimilation_counter
												value > 0
											}
											any_owned_pop = {
												is_same_value = event_target:old_species
											}
										}
										random_owned_pop = {
											limit = {
												is_exact_same_species = event_target:old_species
											}
											change_species = event_target:convert_to_species
											apply_post_assimilation_effects = yes
										}
										change_variable = {
											which = assimilation_counter
											value = -1
										}
										owner = {
											if = {
												limit = {
													has_ascension_perk = ap_become_the_crisis
												}
												complete_crisis_objective = crisobj_purge_pops
											}
										}
									}
								}
								apply_post_assimilation_effects = yes
							}
							else = {
								log_error = "No species found for \\[This.Species.GetName] pop owned by \\[This.Owner.GetName] on \\[This.Planet.GetName] to assimilate to"
							}
						}
					}
				}
			}
		}
		set_variable = {
			which = assimilation_counter
			value = 0
		}
	}
}
